#composeファイルのバージョン指定
version: "3.8"

services:
    #composeファイルではコンテナのことをサービスと呼ぶ
  db:
    image: postgres:13.1-alpine
    #環境変数
    environment:
        #OSのタイムゾーン
      TZ: UTC
      #postgresのタイムゾーン
      PGTZ: UTC
      #データベースのパスワード
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      #ホスト側のディレクトリをコンテナで使用する
      # ここでデータベースの値を永続化しています。

     #そもそもローカルマシン（PCを指す）とDockerコンテナは別空間にあります。
     #ですので、DBコンテナにデータを保存しても、コンテナを削除してしまえば保存したデータは全て消えてしまいます。
     #そこでデータベースの値やファイルなどのデータを永続化する仕組みがこのvolumes(ボリューム)となります。
     # volumes: ホストパス（絶対or相対）: コンテナパス（絶対）
    volumes:
      - "./api/tmp/db:/var/lib/postgresql/data"

  api:
    #ベースとなるdockerfileを指定
    build:
      context: ./api
      #dockerfileに変数を渡す
      args:
        WORKDIR: $WORKDIR

    command: /bin/sh -c "rm -f tmp/pids/server.pid && bundle exec rails s -p 3000 -b '0.0.0.0'"
    
    environment:
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
    volumes:
      - "./api:/$WORKDIR"
    depends_on:
      - db
    ports:
      #ホストポート : dockerポート
      - "$API_PORT:3000"
      # - "8000:3000"
      
      front:
      build:
        context: ./front
        args:
          WORKDIR: $WORKDIR
          # CONTAINER_PORT: $CONTAINER_PORT
          command: yarn run dev
          volumes:
            - "./front:/$WORKDIR"
      ports:
      #ホストポート : dockerポート
      - "$FRONT_PORT:3000"
      # - "$FRONT_PORT:2000"
    depends_on:
      - api